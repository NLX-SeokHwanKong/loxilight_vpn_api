/*
 * LOXILIGHT VPN API
 * LOXILIGHT VPN API for CPE Scenarios
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.21
 *
 * Do not edit the class manually.
 *
 */

(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/Error', 'model/IKEPolicyEntry', 'model/IPSecPolicyEntry', 'model/IPSecSiteConnectionEntry', 'model/VPNServiceEntry', 'api/DefaultApi'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('./ApiClient'), require('./model/Error'), require('./model/IKEPolicyEntry'), require('./model/IPSecPolicyEntry'), require('./model/IPSecSiteConnectionEntry'), require('./model/VPNServiceEntry'), require('./api/DefaultApi'));
  }
}(function(ApiClient, Error, IKEPolicyEntry, IPSecPolicyEntry, IPSecSiteConnectionEntry, VPNServiceEntry, DefaultApi) {
  'use strict';

  /**
   * LOXILIGHT_VPN_API_for_CPE_Scenarios.<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var LoxilightVpnApi = require('index'); // See note below*.
   * var xxxSvc = new LoxilightVpnApi.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new LoxilightVpnApi.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new LoxilightVpnApi.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new LoxilightVpnApi.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module index
   * @version 1.0.0
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient: ApiClient,
    /**
     * The Error model constructor.
     * @property {module:model/Error}
     */
    Error: Error,
    /**
     * The IKEPolicyEntry model constructor.
     * @property {module:model/IKEPolicyEntry}
     */
    IKEPolicyEntry: IKEPolicyEntry,
    /**
     * The IPSecPolicyEntry model constructor.
     * @property {module:model/IPSecPolicyEntry}
     */
    IPSecPolicyEntry: IPSecPolicyEntry,
    /**
     * The IPSecSiteConnectionEntry model constructor.
     * @property {module:model/IPSecSiteConnectionEntry}
     */
    IPSecSiteConnectionEntry: IPSecSiteConnectionEntry,
    /**
     * The VPNServiceEntry model constructor.
     * @property {module:model/VPNServiceEntry}
     */
    VPNServiceEntry: VPNServiceEntry,
    /**
     * The DefaultApi service constructor.
     * @property {module:api/DefaultApi}
     */
    DefaultApi: DefaultApi
  };

  return exports;
}));
